# -*- coding: utf-8 -*-
"""
Created on Fri Nov  1 17:05:58 2019

@author: dell
"""

from keras.datasets import mnist
(train_images,train_labels),(test_images,test_labels) = mnist.load_data()

train_images.shape
len(train_labels)

test_images.shape
len(test_labels)

##构建网络架构
from keras import models
from keras import layers

network = models.Sequential()
network.add(layers.Dense(512,activation="relu",input_shape=(28*28,)))
#第二层，全连接，一个 10 路 softmax 层，将返回一个由10个概率值（总和为1）组成的数组——每个概率值表示当前数字图像属于10个数字类别中的某一个的额概率
network.add(layers.Dense(10,activation="softmax"))

#编译步骤
network.compile(optimizer='rmsprop',
 loss='categorical_crossentropy',
 metrics=['accuracy'])

#转换数据准备数据图像 将（60000，28,28）的数据转换成（60000,28*28）的数据
train_images = train_images.reshape((60000, 28 * 28))
train_images = train_images.astype('float32') / 255
test_images = test_images.reshape((10000, 28 * 28))
test_images = test_images.astype('float32') / 255

#准备标签
from keras.utils import to_categorical
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

#拟合模型 输出loss和accuracy
network.fit(train_images, train_labels, epochs=5, batch_size=128)
test_loss, test_acc = network.evaluate(test_images, test_labels)
print('test_acc:', test_acc)
